= tabs do
  - if cpd_audit.new_record?
    = tab 'New Audit' do
      = render 'admin/cpd_audits/form_new', cpd_audit: cpd_audit

  - if cpd_audit.persisted?
    - if cpd_audit.completed?
      = tab 'Audit' do
        = render 'effective/cpd_audits/cpd_audit', cpd_audit: cpd_audit

      = tab 'Status' do
        = render 'admin/cpd_audits/status', cpd_audit: cpd_audit
    - else
      = tab 'Status' do
        = render 'admin/cpd_audits/status', cpd_audit: cpd_audit

      = tab 'Audit' do
        = render 'effective/cpd_audits/cpd_audit', cpd_audit: cpd_audit

    = tab 'Statements' do
      - datatable = Admin::EffectiveCpdStatementsDatatable.new(user_id: cpd_audit.user.id, user_type: cpd_audit.user.class.name)
      = render_datatable(datatable, inline: true, simple: true)

    = tab 'Audit Reviews' do
      - datatable = Admin::EffectiveCpdAuditReviewsDatatable.new(cpd_audit_id: cpd_audit.id)
      = render_datatable(datatable, inline: true, simple: true)

    - unless cpd_audit.closed?
      = tab 'Determination' do
        = render 'admin/cpd_audits/form_determination', cpd_audit: cpd_audit

    - if cpd_audit.conflicted?
      = tab 'Process Conflict of Interest' do
        = render 'admin/cpd_audits/form_conflict', cpd_audit: cpd_audit

    - if cpd_audit.exemption_requested?
      = tab 'Process Exemption Request' do
        = render 'admin/cpd_audits/form_exemption', cpd_audit: cpd_audit

    - if cpd_audit.extension_requested?
      = tab 'Process Extension Request' do
        = render 'admin/cpd_audits/form_extension', cpd_audit: cpd_audit

    - if cpd_audit.respond_to?(:log_changes_datatable)
      = tab 'Logs' do
        = render_inline_datatable(cpd_audit.log_changes_datatable)
